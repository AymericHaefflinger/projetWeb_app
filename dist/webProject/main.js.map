{"version":3,"sources":["./src/app/models/user/user.ts","./src/environments/environment.ts","./src/app/module/produit/produit.component.ts","./src/app/module/produit/produit.component.html","./src/app/errorHandler.module.ts","./src/app/module/auth/auth.component.ts","./src/app/module/auth/auth.component.html","./src/environments/environments.ts","./src/app/module/header/header.component.ts","./src/app/module/header/header.component.html","./src/app/module/accueil/accueil.component.ts","./src/app/module/accueil/accueil.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/module/register/register.component.ts","./src/app/module/register/register.component.html","./src/app/app.module.ts","./src/app/module/panier/panier.component.ts","./src/app/module/panier/panier.component.html","./src/app/models/user/user.action.ts","./src/app/api-http-interceptor.ts","./src/app/models/article/article.state.ts","./src/app/module/detail/detail.component.ts","./src/app/module/detail/detail.component.html","./src/http-service.service.ts","./src/app/module/compte/compte.component.ts","./src/app/module/compte/compte.component.html","./src/app/models/user/user.state.ts","./src/app/models/article/article.action.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class User{\n    nom: string;\n    prenom: string;\n    mail: string;\n    password: string;\n  \n    constructor(nom?: string, prenom?: string, mail?: string, password?: string){\n      this.nom=null; this.prenom=null; this.mail=null; this.password=null;\n      if(nom)\n        this.nom = nom;\n      if(prenom)\n        this.prenom = prenom;\n      if(mail)\n        this.mail = mail;\n      if(password)\n        this.password = password;\n    }\n  }\n  export class userStateModel {\n    user: User;\n  }\n  \n\n  export class UserAuth{\n    Mail: string;\n    Password: string;\n  \n    constructor(mail: string, password: string){\n\n      this.Mail = mail;\n      this.Password = password;\n    }\n  }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input } from \"@angular/core\";\nimport { from, of, interval } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\nimport { HttpServiceService } from \"../../../http-service.service\";\nimport { Article } from \"../../models/article/article\";\nimport { Store, Select } from \"@ngxs/store\";\nimport { AddArticle } from \"../../models/article/article.action\";\nimport { ArticleState } from \"../../models/article/article.state\";\nimport { Observable } from \"rxjs\";\nimport { toast } from 'materialize-css';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: \"produit\",\n  templateUrl: './produit.component.html',\n  styleUrls: ['./produit.component.css']\n})\nexport class ProduitComponent {\n  @Input() name: string;\n\n  Articles: Article[];\n  allArticles: Article[];\n\n  constructor(\n    public HttpServiceService: HttpServiceService,\n    private httpClient: HttpClient,\n    private store: Store\n  ) {}\n\n  getData(): void {\n    this.httpClient.get<any>(\"https://projet-web-cnam-bdd.herokuapp.com/article/get\",\n    { headers: { 'content-type': 'application/x-www-form-urlencoded' } })\n    .subscribe(data => {\n      this.Articles = data[0]\n    }, error => {\n     toast({html: 'Problème de connexion', classes: 'rounded'});\n    });\n  }\n\n  getDataInit(): void {\n    this.httpClient.get<any>(\"https://projet-web-cnam-bdd.herokuapp.com/article/get\",\n    { headers: { 'content-type': 'application/x-www-form-urlencoded' } })\n    .subscribe(data => {\n      this.setupData(data);\n    }, error => {\n     toast({html: 'Problème de connexion', classes: 'rounded'});\n    });\n  }\n\n  setupData(data)\n  {\n    this.Articles = data[0];\n    this.allArticles = data[0];\n  }\n\n  searchArticle(searchTerm: string) {\n    if (searchTerm) {\n      let body = new URLSearchParams();\n      body.set('term', searchTerm);\n\n      this.httpClient.post<any>(\"/api/article/search\", body.toString(),\n      { headers: { 'content-type': 'application/x-www-form-urlencoded' } })\n      .subscribe(data => {\n        this.Articles = data[0]; \n      }, error => {\n        toast({html: 'Problème de connexion', classes: 'rounded'});\n      });\n    } else {\n      this.getData();\n    }\n  }\n\n  ngOnInit() {\n    this.getDataInit();\n  }\n\n  addArticle(a: Article) {\n    this.store.dispatch(new AddArticle(a)).subscribe();\n  }\n}\n","<input\n#nomArticle\nclass=\"input\"\ntype=\"text\"\nid=\"nom\"\nname=\"nom\"\nplaceholder=\"Nom du jeu\"\n/>\n<label for=\"nom\">Nom du jeu</label>\n\n<button class=\"btn btn-primary\" (click)=\"searchArticle(nomArticle.value)\">\nRechercher\n</button>\n\n<div class=\"folder\">\n<div class=\"carreJeu\" *ngFor=\"let art of Articles\">\n  <img src=\"{{ art.img }}\" />\n  <h4>{{ art.nom }}</h4>\n  <p>{{ art.prix }}</p>\n\n  <div>\n    <a class=\"btn btn-primary\" (click)=\"addArticle(art)\">\n      Ajouter au panier\n    </a>\n    <a routerLink=\"{{ art.nom }}\" class=\"btn btn-primary\">Détails</a>\n  </div>\n</div>\n</div>","import {ErrorHandler} from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomErrorHandler implements ErrorHandler {\n  constructor() {}\n  handleError(error) {\n  }\n}","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators, ReactiveFormsModule  } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { UserAuth, User } from '../../models/user/user';\nimport { toast } from 'materialize-css';\nimport { Store, Select } from \"@ngxs/store\";\nimport { AddUser, NewJwt } from \"../../models/user/user.action\";\nimport { UserState } from \"../../models/user/user.state\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  @Output('onUserChanged') onFormSubmit = new EventEmitter<UserAuth>();\n  \n  \n  passwordValidator = (control: AbstractControl) : ValidationErrors => {\n    if(!control.value)\n      return null;\n\n    if(!this.password)\n      return null;\n    return control.value === this.password.value ? null : ({'invalid': true});\n  }\n\n  compteForm : FormGroup = this.fb.group({\n    mail : ['monMail@mail.com', [Validators.required, this.emailValidator]],\n    password: ['modepass', [Validators.required]],\n  })\n\n  constructor(private fb : FormBuilder,\n     private httpClient: HttpClient,\n     private store: Store,\n     private router: Router) { }\n\n  get mail() {return this.compteForm.get('mail');}\n  get password() {return this.compteForm.get('password');}\n\n  onSubmit() : void{\n    \n    let user : UserAuth = new UserAuth( this.mail.value, this.password.value);\n    this.onFormSubmit.emit(user);\n\n    let body = new URLSearchParams();\n    body.set('mail', this.mail.value);\n    body.set('mdp', this.password.value);\n\n    this.httpClient.post<any>(\"/api/user/login\", body.toString(),\n      { headers: { 'content-type': 'application/x-www-form-urlencoded' }, observe: 'response' }, )\n    .subscribe(response => {\n      this.apiSuccess(response, response.headers.get('Authorization')); \n     }, error => {\n      toast({html: 'Problème de connexion ou d\\'identifiant!', classes: 'rounded'});\n     });\n  }\n\n\n  apiSuccess(data, jwt){\n    toast({html: 'Connexion réussie!', classes: 'rounded'});\n    this.addUser(data.body.user, jwt);\n    this.router.navigate(['/compte']);\n  }\n\n  addUser(u: User, j: string) {\n    this.store.dispatch(new AddUser(u)).subscribe();\n    this.store.dispatch(new NewJwt(\"Bearer \" + j));\n  }\n\n  ngOnInit() {\n  }\n  \n  test(){\n    console.log(this.compteForm.value);\n  }\n  // validators\n  noNumberValidator(control: AbstractControl) : ValidationErrors{\n    const reg : RegExp = /[0-9]/\n    if(!control.value)\n      return null;\n\n    return !reg.test(control.value) ? null : ({'number': true});\n  }\n\n  emailValidator(control: AbstractControl) : ValidationErrors{\n    const reg : RegExp = /[a-zA-Z]+@[a-zA-Z]+\\.[a-zA-Z]+/\n     \n    if(!control.value)\n      return null;\n\n    return reg.test(control.value) ? null : ({'notAnEmailAddress': true});\n  }\n}\n","<div> <h4>Se connecter</h4>\n    <form [formGroup]=\"compteForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"form-group\">\n            <label>\n                Adresse E-mail\n                <input type=\"email\"  class=\"form-control\" formControlName=\"mail\"  placeholder=\"Entrez votre adresse e-mail\" >\n            </label>\n            <div *ngIf=\"mail.invalid && mail.errors.notAnEmailAddress\">\n            <p class=\"has-error\">L'adresse mail entrée est invalide.</p>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label>\n                Mot de passe\n                <input type=\"password\"  id=\"pass\" formControlName=\"password\"  class=\"form-control\" >\n            </label>\n        </div>\n\n    \n        <button type=\"submit\"  class=\"btn btn-primary\" [disabled]=\"!compteForm.valid\">Se connecter</button>\n    </form>\n  </div>","export const environment = {\r\n  production : false,\r\n  baseUrl: '../assets'\r\n}","import { Component, Input } from \"@angular/core\";\r\nimport { from, of, interval } from \"rxjs\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { HttpServiceService } from \"../../../http-service.service\";\r\nimport { Article } from \"../../models/article/article\";\r\nimport { Store, Select } from \"@ngxs/store\";\r\nimport { AddArticle } from \"../../models/article/article.action\";\r\nimport { ArticleState } from \"../../models/article/article.state\";\r\nimport { User } from \"../../models/user/user\";\r\nimport { UserState } from \"../../models/user/user.state\";\r\nimport { Observable } from \"rxjs\";\r\nimport { DisconnectUser } from \"../../models/user/user.action\";\r\n\r\n@Component({\r\n  selector: \"header\",\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n  articlePanier$: Observable<Article[]>;\r\n  user$: Observable<User>;\r\n\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.articlePanier$ = this.store.select(ArticleState.getArticles);\r\n      this.user$ = this.store.select(UserState.getUser);\r\n    }\r\n\r\n  disconnectUser()\r\n  {\r\n    location.reload();\r\n  }\r\n  \r\n}\r\n","<nav>\n    <div class=\"nav-wrapper teal lighten-2\">\n      <a routerLink=\"/\" class=\"brand-logo\">Soc&Thé</a>\n      <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n        <li *ngIf=\"(user$ | async) != null\" (click)=\"disconnectUser()\"><a>Se déconnecter</a></li>\n        <li *ngIf=\"(user$ | async) != null\"><a routerLink=\"/compte\">Mon Compte</a></li>\n        <li *ngIf=\"(user$ | async) == null\"><a routerLink=\"/auth\">Connexion</a></li>\n        <li *ngIf=\"(user$ | async) == null\"><a routerLink=\"/register\">S'inscrire</a></li>\n        <li><a routerLink=\"../magasin/catalogue\">Catalogue</a></li>\n        <li>\n          <a routerLink=\"../magasin/panier\"\n            >Votre Panier :\n            {{ (articlePanier$ | async).length }} article(s)</a\n          >\n        </li>\n      </ul>\n    </div>\n  </nav>","import { Component, Input } from \"@angular/core\";\r\nimport { from, of, interval } from \"rxjs\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { HttpServiceService } from \"../../../http-service.service\";\r\nimport { Article } from \"../../models/article/article\";\r\nimport { Store, Select } from \"@ngxs/store\";\r\nimport { AddArticle } from \"../../models/article/article.action\";\r\nimport { ArticleState } from \"../../models/article/article.state\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"accueil\",\r\n  templateUrl: './accueil.component.html',\r\n  styleUrls: ['./accueil.component.css']\r\n})\r\nexport class AccueilComponent {}\r\n","<h4>Bienvenue sur notre magasin en ligne</h4>\n<img src=\"https://www.jeuxdenim.be/images/boutique-Jeux-de-NIM-jeux.jpg\">\n<h6>Ici vous retrouverez l'une des plus grandes collections de jeux de sociétés en ligne</h6>\n<h6>La commande et la livraison sont disponible en france métropolitaine</h6>\n<h6>N'hésitez pas à vous rendre à la boutique directement pour toute question</h6>","import { Component, VERSION } from '@angular/core';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent  {\n  name = 'Angular ' + VERSION.major;\n}\n","<header></header>\n\n<router-outlet>\n</router-outlet>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators, ReactiveFormsModule  } from '@angular/forms';\nimport { User } from '../../models/user/user';\nimport { toast } from 'materialize-css';\nimport { HttpClient } from '@angular/common/http';\nimport { Store, Select } from \"@ngxs/store\";\nimport { AddUser, NewJwt } from \"../../models/user/user.action\";\nimport { UserState } from \"../../models/user/user.state\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class registerComponent implements OnInit {\n\n  @Output('onUserChanged') onFormSubmit = new EventEmitter<User>();\n  \n  \n  passwordValidator = (control: AbstractControl) : ValidationErrors => {\n    if(!control.value)\n      return null;\n\n    if(!this.password)\n      return null;\n    return control.value === this.password.value ? null : ({'invalid': true});\n  }\n\n  compteForm : FormGroup = this.fb.group({\n    name : ['Haefflinger', [Validators.required, this.noNumberValidator]],\n    surname: ['Aymeric', [Validators.required, this.noNumberValidator]],\n    mail : ['monMail@mail.com', [Validators.required, this.emailValidator]],\n    password: ['modepass', [Validators.required]],\n  })\n\n  constructor(private fb : FormBuilder,\n     private http: HttpClient,\n     private store: Store,\n     private router: Router) { }\n\n  get name() {return this.compteForm.get('name'); }\n  get surname() { return this.compteForm.get('surname');}\n  get mail() {return this.compteForm.get('mail');}\n  get password() {return this.compteForm.get('password');}\n\n  onSubmit() : void{\n    \n    let body = new URLSearchParams();\n    body.set('nom', this.name.value);\n    body.set('prenom', this.surname.value);\n    body.set('mail', this.mail.value);\n    body.set('mdp', this.password.value);\n\n     this.http.post<any>(\"/api/user/register\", body.toString(),\n     { headers: { 'content-type': 'application/x-www-form-urlencoded' }, observe: 'response' }, )\n     .subscribe(response => {\n       this.apiSuccess(response, response.headers.get('Authorization')); \n     }, error => {\n      toast({html: 'Mail déja utilisé ou problème dans les champs remplis!', classes: 'rounded'});\n     });\n  }\n\n  apiSuccess(data, jwt){\n    toast({html: 'Connexion réussie!', classes: 'rounded'});\n    this.addUser(data.body.user, jwt);\n    this.router.navigate(['/compte']);\n  }\n\n  addUser(u: User, j: string) {\n    this.store.dispatch(new AddUser(u)).subscribe();\n    this.store.dispatch(new NewJwt(\"Bearer \" + j));\n  }\n\n  ngOnInit() {\n  }\n  \n  test(){\n    console.log(this.compteForm.value);\n  }\n  // validators\n  noNumberValidator(control: AbstractControl) : ValidationErrors{\n    const reg : RegExp = /[0-9]/\n    if(!control.value)\n      return null;\n\n    return !reg.test(control.value) ? null : ({'number': true});\n  }\n\n  emailValidator(control: AbstractControl) : ValidationErrors{\n    const reg : RegExp = /[a-zA-Z]+@[a-zA-Z]+\\.[a-zA-Z]+/\n     \n    if(!control.value)\n      return null;\n\n    return reg.test(control.value) ? null : ({'notAnEmailAddress': true});\n  }\n}\n","<div> <h4>S'inscrire</h4>\n    <form [formGroup]=\"compteForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"form-group\" >\n            <label>\n                Nom\n                <input  type=\"text\"  class=\"form-control\" formControlName=\"name\" placeholder=\"Entrez votre nom\" >\n            </label>\n            <div *ngIf=\"name.invalid && name.errors.number\">\n              <p class=\"has-error\">Votre nom ne peut pas contenir de numéro.</p>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label>\n                Prénom\n                <input type=\"text\"  class=\"form-control\" formControlName=\"surname\"  placeholder=\"Entrez votre prénom\" >\n            </label>\n             <div *ngIf=\"surname.invalid && surname.errors.number\">\n              <p class=\"has-error\">Votre prénom ne peut pas contenir de numéro.</p>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label>\n                Adresse E-mail\n                <input type=\"email\"  class=\"form-control\" formControlName=\"mail\"  placeholder=\"Entrez votre adresse e-mail\" >\n            </label>\n            <div *ngIf=\"mail.invalid && mail.errors.notAnEmailAddress\">\n            <p class=\"has-error\">L'adresse mail entrée est invalide.</p>\n            </div>\n        </div>\n    \n        <div class=\"form-group\">\n            <label>\n                Mot de passe\n                <input type=\"password\"  id=\"pass\" formControlName=\"password\"  class=\"form-control\" >\n            </label>\n        </div>\n\n    \n        <button type=\"submit\"  class=\"btn btn-primary\" [disabled]=\"!compteForm.valid\">S'inscrire</button>\n    </form>\n  </div>","import { NgModule, ErrorHandler } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from \"./app.component\";\nimport { ProduitComponent } from \"./module/produit/produit.component\";\nimport { HeaderComponent } from \"./module/header/header.component\";\nimport { PanierComponent } from \"./module/panier/panier.component\";\nimport { AccueilComponent } from \"./module/accueil/accueil.component\";\nimport { DetailComponent } from \"./module/detail/detail.component\";\nimport { CompteComponent } from \"./module/compte/compte.component\";\nimport { AuthComponent } from \"./module/auth/auth.component\";\nimport { registerComponent } from \"./module/register/register.component\";\nimport { HttpServiceService } from \"../http-service.service\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { RouterModule } from \"@angular/router\";\nimport { ApiHttpInterceptor } from './api-http-interceptor';\n\nimport { AppRoutingModule } from \"./app-routing.module\";\n\nimport { NgxsModule } from \"@ngxs/store\";\nimport { ArticleState } from \"./models/article/article.state\";\nimport { UserState } from \"./models/user/user.state\";\nimport { CustomErrorHandler } from \"./errorHandler.module\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgxsModule.forRoot([ArticleState, UserState])\n  ],\n  declarations: [\n    AppComponent,\n    ProduitComponent,\n    HeaderComponent,\n    PanierComponent,\n    AccueilComponent,\n    DetailComponent,\n    CompteComponent,\n    AuthComponent, \n    registerComponent\n  ],\n  bootstrap: [AppComponent],\n  providers: [HttpServiceService,\n    { provide: HTTP_INTERCEPTORS, useClass: ApiHttpInterceptor, multi: true \n    },\n    {\n      provide: ErrorHandler, \n      useClass: CustomErrorHandler\n    }],\n  exports: [AppRoutingModule, HeaderComponent, ProduitComponent]\n})\nexport class AppModule {}\n","import { Component, Input } from \"@angular/core\";\r\nimport { from, of, interval } from \"rxjs\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { HttpServiceService } from \"../../../http-service.service\";\r\nimport { Article } from \"../../models/article/article\";\r\nimport { Store, Select } from \"@ngxs/store\";\r\nimport { AddArticle } from \"../../models/article/article.action\";\r\nimport { RemoveArticle } from \"../../models/article/article.action\";\r\nimport { ArticleState } from \"../../models/article/article.state\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"panier\",\r\n  templateUrl: './panier.component.html',\r\n  styleUrls: ['./panier.component.css']\r\n})\r\nexport class PanierComponent {\r\n  articlePanier$: Observable<Article[]>;\r\n  prixPanier$: Observable<number>;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.articlePanier$ = this.store.select(ArticleState.getArticles);\r\n    this.prixPanier$ = this.store.select(ArticleState.getPrix);\r\n  }\r\n\r\n  removeArticle(a: Article) {\r\n    this.store.dispatch(new RemoveArticle(a)).subscribe();\r\n  }\r\n}\r\n","\n<h4 *ngIf=\"(articlePanier$ | async).length >= 1\">Votre Panier</h4>\n<h4 *ngIf=\"(articlePanier$ | async).length == 0\">Votre panier est vide</h4>\n<ul\n  class=\"collection with-header\"\n  *ngFor=\"let item of (articlePanier$ | async)\"\n>\n  <li class=\"collection-item avatar\">\n    <img src=\"{{ item.img }}\" alt=\"\" class=\"circle\" />\n    <span class=\"title\">{{ item.nom }}</span>\n    <p>\n      {{ item.prix }}\n    </p>\n    <a\n      class=\"btn btn-primary secondary-content\"\n      (click)=\"removeArticle(item)\"\n      ><i class=\"material-icons\">Enlever du panier</i></a\n    >\n  </li>\n</ul>\n<h5 *ngIf=\"(articlePanier$ | async).length >= 1\">Prix total : {{prixPanier$ | async}}€</h5>","import { User } from \"./user\";\n\nexport class AddUser {\n  static readonly type = \"[user] add\";\n  constructor(public payload: User) {}\n}\n\n\nexport class DisconnectUser{\n  static readonly type = '[user] disconnect';\n\n  constructor(){}\n}\n\nexport class NewJwt{\n  static readonly type = '[user] NewJwt';\n\n  constructor(public payload: string){}\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngxs/store';\nimport { UserState } from './models/user/user.state';\n\n@Injectable()\nexport class ApiHttpInterceptor implements HttpInterceptor {\n\n  jwtToken : string;\n\n  constructor(private store: Store) { \n    this.store.select(UserState.GetLoggedToken).subscribe(token=>\n        this.jwtToken = token\n    );\n  }\n   \n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      setHeaders: {\n        'Authorization': this.jwtToken,\n      },\n    });\n\n    return next.handle(request);\n  }\n}","import { AddArticle, RemoveArticle } from \"./article.action\";\r\nimport { State, Action, StateContext, Selector } from \"@ngxs/store\";\r\nimport { Article } from \"./article\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { patch, removeItem } from \"@ngxs/store/operators\";\r\n\r\nexport interface ArticleStateModel {\r\n  articles: Article[];\r\n  prix: number;\r\n}\r\n\r\n@State<ArticleStateModel>({\r\n  name: \"articles\",\r\n  defaults: { articles: [], prix: 0 }\r\n})\r\n@Injectable()\r\nexport class ArticleState {\r\n  @Selector()\r\n  static getArticles(state: ArticleStateModel) {\r\n    return state.articles;\r\n  }\r\n\r\n  @Selector()\r\n  static getPrix(state: ArticleStateModel) {\r\n    return state.prix;\r\n  }\r\n\r\n  @Action(AddArticle)\r\n  add(\r\n    { getState, patchState }: StateContext<ArticleStateModel>,\r\n    { payload }: AddArticle\r\n  ) {\r\n    const state = getState();\r\n    patchState({\r\n      articles: [...state.articles, payload],\r\n      prix: state.prix + +payload.prix.slice(0, -1)\r\n    });\r\n  }\r\n\r\n  @Action(RemoveArticle)\r\n  rm(\r\n    { getState, patchState }: StateContext<ArticleStateModel>,\r\n    { payload }: RemoveArticle\r\n  ) {\r\n    const state = getState();\r\n    patchState({\r\n      prix: state.prix - +payload.prix.slice(0, -1)\r\n    });\r\n    state.articles.splice(state.articles.indexOf(payload), 1);\r\n  }\r\n}\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { from, of, interval } from \"rxjs\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { HttpServiceService } from \"../../../http-service.service\";\r\nimport { Article } from \"../../models/article/article\";\r\nimport { Store, Select } from \"@ngxs/store\";\r\nimport { ArticleState } from \"../../models/article/article.state\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AddArticle } from \"../../models/article/article.action\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Component({\r\n  selector: \"detail\",\r\n  templateUrl: './detail.component.html',\r\n  styleUrls: ['./detail.component.css']\r\n})\r\nexport class DetailComponent {\r\n  allArt: Article[];\r\n  art: Article;\r\n\r\n  constructor(\r\n    public HttpServiceService: HttpServiceService,\r\n    private httpClient: HttpClient,\r\n    private route: ActivatedRoute,\r\n    private store: Store\r\n  ) {}\r\n\r\n  getData(): void {\r\n    this.httpClient.get<any>(\"/api/article/get\",\r\n    { headers: { 'content-type': 'application/x-www-form-urlencoded' } })\r\n    .subscribe(Articles => \r\n      Articles[0].forEach((myObject, index) => {\r\n        if (myObject.nom == this.route.snapshot.params.id) {\r\n          this.art = myObject;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  \r\n\r\n  addArticle(a: Article) {\r\n    if (this.art.nom != \"\") {\r\n      this.store.dispatch(new AddArticle(a)).subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n  }\r\n}\r\n","<h4>Détail du jeu</h4>\n<ul class=\"collection with-header\">\n  <li class=\"collection-item avatar\">\n    <img src=\"{{ art.img }}\" alt=\"\" class=\"circle\" />\n    <span class=\"title left_align\">{{ art.nom }}</span>\n    <p class=\"left_align\">\n      {{ art.prix }}\n    </p>\n  </li>\n  <div class=\"center_align\">\n    <li class=\"li_margin\">But du jeu : Gagner</li>\n    <li class=\"li_margin\">Description : Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc varius quis tellus sit amet dictum. \n      Morbi vestibulum congue viverra. Curabitur luctus orci in scelerisque blandit. Sed ultrices fermentum porttitor. \n      Proin vehicula congue augue in hendrerit. Praesent vulputate orci dapibus orci lobortis, non ultrices massa aliquet.\n      Sed at scelerisque turpis. Duis quis mi nisl. In hac habitasse platea dictumst.\n      Cras ut est accumsan, ultrices velit id, tincidunt tellus. Nunc commodo nisl eu quam sodales posuere.\n      Fusce sit amet lorem eu mauris pulvinar volutpat. </li>\n    <li>\n      <button class=\"btn btn-primary\" (click)=\"addArticle(art)\">\n        Ajouter au panier\n      </button>\n    </li>\n  </div>\n</ul>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from './environments/environments';\nimport { Article } from './app/models/article/article';\n\n@Injectable()\nexport class HttpServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getData() : Observable<Article[]> {\n    return this.http.get<Article[]>(environment.baseUrl + \"/bouchon.json\");\n  }\n\n  searchArticle(term: string): Observable<Article[]> {\n    term = term.trim();\n\n    const options = term ?\n     { params: new HttpParams().set('nom', term) } : {};\n\n    return this.http.get<Article[]>(environment.baseUrl + \"/bouchon.json\", options)\n  }\n}","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { EventEmitter, Output } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators, ReactiveFormsModule  } from '@angular/forms';\r\nimport { from, of, interval } from \"rxjs\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { HttpServiceService } from \"../../../http-service.service\";\r\nimport { Article } from \"../../models/article/article\";\r\nimport { Store, Select } from \"@ngxs/store\";\r\nimport { ArticleState } from \"../../models/article/article.state\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AddArticle } from \"../../models/article/article.action\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { User, userStateModel } from \"../../models/user/user\";\r\nimport { UserState } from \"../../models/user/user.state\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { toast } from 'materialize-css';\r\nimport { AddUser } from \"../../models/user/user.action\";\r\n\r\n\r\n@Component({\r\n  selector: \"compte\",\r\n  templateUrl: './compte.component.html',\r\n  styleUrls: ['./compte.component.css']\r\n})\r\n\r\nexport class CompteComponent {\r\n\r\n  user$: Observable<User>;\r\n  oldMail : string;\r\n\r\n  constructor(private store: Store,\r\n    private fb : FormBuilder,\r\n    private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.user$ = this.store.select(UserState.getUser);\r\n    var testNull = null;\r\n    this.user$.subscribe(res => testNull = res);\r\n    if(testNull)\r\n      this.initForm();\r\n    this.user$.subscribe(res => console.warn(res));\r\n  }\r\n  \r\n  initForm(){\r\n      var name$;\r\n      var surname$;\r\n      var mail$;\r\n      var password$;\r\n      this.user$.subscribe(res => name$=(res[\"nom\"]));\r\n      this.user$.subscribe(res => surname$=(res[\"prenom\"]));\r\n      this.user$.subscribe(res => mail$=(res[\"mail\"]));\r\n      this.user$.subscribe(res => password$=(res[\"mdp\"]));\r\n      this.compteForm.patchValue({\r\n        name: name$,\r\n        surname: surname$,\r\n        mail: mail$,\r\n        password: password$\r\n      })\r\n      this.oldMail = mail$;\r\n  }\r\n\r\n  @Output('onUserChanged') onFormSubmit = new EventEmitter<User>();\r\n\r\n  compteForm : FormGroup = this.fb.group({\r\n    name : ['' , [Validators.required, this.noNumberValidator]],\r\n    surname: ['', [Validators.required, this.noNumberValidator]],\r\n    mail : ['', [Validators.required, this.emailValidator]],\r\n    password: ['', [Validators.required]],\r\n  })\r\n  \r\n  get name() {return this.compteForm.get('name'); }\r\n  get surname() { return this.compteForm.get('surname');}\r\n  get mail() {return this.compteForm.get('mail');}\r\n  get password() {return this.compteForm.get('password');}\r\n\r\n  onSubmit() : void{\r\n  \r\n    let body = new URLSearchParams();\r\n    body.set('oldMail', this.oldMail);\r\n    body.set('nom', this.name.value);\r\n    body.set('prenom', this.surname.value);\r\n    body.set('mail', this.mail.value);\r\n    body.set('mdp', this.password.value);\r\n  \r\n     this.http.post<any>(\"/api/user/modify\", body.toString(),\r\n     { headers: { 'content-type': 'application/x-www-form-urlencoded' } })\r\n     .subscribe(data => {\r\n      this.userIsModified(data.user);\r\n     }, error => {\r\n      toast({html: 'Problème lors de la modification!', classes: 'rounded'});\r\n     });\r\n  }\r\n\r\n  userIsModified(u: User){\r\n    toast({html: 'Modification réussie!', classes: 'rounded'});\r\n    this.store.dispatch(new AddUser(u)).subscribe();\r\n  }\r\n  \r\n  // validators\r\n  noNumberValidator(control: AbstractControl) : ValidationErrors{\r\n    const reg : RegExp = /[0-9]/\r\n    if(!control.value)\r\n      return null;\r\n\r\n    return !reg.test(control.value) ? null : ({'number': true});\r\n  }\r\n\r\n  emailValidator(control: AbstractControl) : ValidationErrors{\r\n    const reg : RegExp = /[a-zA-Z]+@[a-zA-Z]+\\.[a-zA-Z]+/\r\n     \r\n    if(!control.value)\r\n      return null;\r\n\r\n    return reg.test(control.value) ? null : ({'notAnEmailAddress': true});\r\n  }\r\n\r\n  passwordValidator = (control: AbstractControl) : ValidationErrors => {\r\n    if(!control.value)\r\n      return null;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","\n<div *ngIf=\"(user$ | async) != null ; else elseBlock\">\n\n  <div class=\"recapContainer\">\n      <h4>Vos informations</h4>\n      <ul class=\"collection with-header containerPadding\">\n        <li>\n          Nom : {{ (user$|async).nom }}\n        </li>\n        <li>\n          Prénom : {{ (user$|async).prenom }} \n        </li>\n        <li>\n          Mail : {{ (user$|async).mail }}\n        </li>\n      </ul>\n  </div>\n\n  <div class=\"recapContainer\">\n    <h4>Modifier vos informations</h4>\n    <form [formGroup]=\"compteForm\" (ngSubmit)=\"onSubmit()\">\n\n      <div class=\"form-group\" >\n          <label>\n              Nom\n              <input  type=\"text\"  class=\"form-control\" formControlName=\"name\" placeholder=\"Entrez votre nouveau nom\" >\n          </label>\n          <div *ngIf=\"name.invalid && name.errors.number\">\n            <p class=\"has-error\">Votre nom ne peut pas contenir de numéro.</p>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label>\n              Prénom\n              <input type=\"text\"  class=\"form-control\" formControlName=\"surname\"  placeholder=\"Entrez votre nouveau prénom\" >\n          </label>\n           <div *ngIf=\"surname.invalid && surname.errors.number\">\n            <p class=\"has-error\">Votre prénom ne peut pas contenir de numéro.</p>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label>\n              Adresse E-mail\n              <input type=\"email\"  class=\"form-control\" formControlName=\"mail\"  placeholder=\"Entrez votre nouvelle adresse e-mail\" >\n          </label>\n          <div *ngIf=\"mail.invalid && mail.errors.notAnEmailAddress\">\n          <p class=\"has-error\">L'adresse mail entrée est invalide.</p>\n          </div>\n      </div>\n  \n      <div class=\"form-group\">\n          <label>\n              Mot de passe\n              <input type=\"password\"  id=\"pass\" formControlName=\"password\"  class=\"form-control\" placeholder=\"Entrez votre nouveau mot de passe\" >\n          </label>\n      </div>\n      <button type=\"submit\"  class=\"btn btn-primary\" [disabled]=\"!compteForm.valid\">Changer les informations</button>\n  </form>\n  </div>\n\n</div>\n\n<ng-template #elseBlock>\n  <h4>Vous n'êtes pas connecté</h4>\n  <h6>Pour accéder à votre espace vous pouvez créer un compte ou vous connecter à un compte déja créé</h6>\n</ng-template>","import { AddUser, DisconnectUser, NewJwt } from \"./user.action\";\nimport { State, Action, StateContext, Selector } from \"@ngxs/store\";\nimport { User } from \"./user\";\nimport { Injectable } from \"@angular/core\";\nimport { patch, removeItem } from \"@ngxs/store/operators\";\n\nexport interface UserStateModel {\n  user: User;\n  token: string;\n  isConnected: Boolean;\n}\n\n@State<UserStateModel>({\n  name: \"user\",\n  defaults: { \n    user: null, \n    token:\"\",\n    isConnected: false\n  }\n})\n\n@Injectable()\nexport class UserState {\n  @Selector()\n  static getUser(state: UserStateModel) {\n    return state.user;\n  }\n\n  @Selector()\n  static IsConnected(state: UserStateModel) : Boolean{\n      return state.isConnected;\n  }\n\n  @Selector()\n  static GetLoggedToken(state: UserStateModel) : string{\n      return state.token;\n  }\n\n  @Action(AddUser)\n  add(\n    { getState, patchState, setState }: StateContext<UserStateModel>,\n    { payload }: AddUser\n  ) {\n    const state = getState();\n    setState({\n      ...state,\n      user: payload,\n      isConnected: true\n    });\n  }\n\n  @Action(DisconnectUser)\n  disconnect\n  ({getState, patchState} : StateContext<UserStateModel>, \n    {} : DisconnectUser){\n      patchState({\n          user: null,\n          isConnected: false,\n          token: \"\"\n      });\n  }\n  \n  @Action(NewJwt)\n  newJwt(\n    {getState, patchState} : StateContext<UserStateModel>,\n     {payload} : NewJwt){\n      console.log(\"New JWT: \", payload);\n      patchState({\n          token: payload\n      });\n  }\n}\n","import { Article } from \"./article\";\r\n\r\nexport class AddArticle {\r\n  static readonly type = \"[article] Add\";\r\n  constructor(public payload: Article) {}\r\n}\r\n\r\nexport class RemoveArticle {\r\n  static readonly type = \"[article] Remove\";\r\n  constructor(public payload: Article) {}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { AccueilComponent } from \"./module/accueil/accueil.component\";\r\nimport { CompteComponent } from \"./module/compte/compte.component\";\r\nimport { AuthComponent } from './module/auth/auth.component';\r\nimport { registerComponent } from './module/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/accueil\", pathMatch: \"full\" },\r\n  { path: \"accueil\", component: AccueilComponent },\r\n  {\r\n    path: \"magasin\",\r\n    loadChildren: () =>\r\n      import(\"./module/magasin-rooting.module\").then(m => m.MagasinRoutingModule)\r\n  },\r\n  { path: \"compte\", component: CompteComponent },\r\n  { path: \"auth\", component: AuthComponent },\r\n  { path: \"register\", component: registerComponent },\r\n  { path: \"**\", redirectTo: \"/accueil\", pathMatch: \"full\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}